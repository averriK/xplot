% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/buildPlot.plotly.R
\name{buildPlot.plotly}
\alias{buildPlot.plotly}
\title{Title}
\usage{
buildPlot.plotly(
  data,
  plot.object = NA,
  plot.title = NA,
  plot.subtitle = NA,
  plot.height = NA,
  plot.width = NA,
  xAxis.legend = "X",
  yAxis.legend = "Y",
  group.legend = "ID",
  color.palette = "viridis",
  plot.type = "line",
  line.style = "solid",
  point.style = "circle",
  xAxis.log = FALSE,
  yAxis.log = FALSE,
  xAxis.reverse = FALSE,
  yAxis.reverse = FALSE,
  line.size = 1,
  point.size = 2,
  xAxis.max = NA,
  yAxis.max = NA,
  xAxis.min = NA,
  yAxis.min = NA,
  xAxis.label = TRUE,
  yAxis.label = TRUE,
  legend.layout = "horizontal",
  legend.align = "right",
  legend.valign = "top",
  legend.show = TRUE,
  plot.save = FALSE,
  plot.theme = NA
)
}
\arguments{
\item{data}{data.frame}

\item{plot.object}{plotly object}

\item{plot.title}{character}

\item{plot.subtitle}{character}

\item{plot.height}{numeric}

\item{plot.width}{numeric}

\item{xAxis.legend}{character}

\item{yAxis.legend}{character}

\item{group.legend}{character}

\item{color.palette}{character}

\item{plot.type}{character c("line","spline","point","column","bar")}

\item{line.style}{character c("solid","dashed","dotted","dotdash","longdash","twodash")}

\item{point.style}{character c("circle","square","diamond","triangle","triangle-down")}

\item{xAxis.log}{boolean}

\item{yAxis.log}{boolean}

\item{xAxis.reverse}{boolean}

\item{yAxis.reverse}{boolean}

\item{line.size}{numeric}

\item{point.size}{numeric}

\item{xAxis.max}{numeric}

\item{yAxis.max}{numeric}

\item{xAxis.min}{numeric}

\item{yAxis.min}{numeric}

\item{xAxis.label}{boolean}

\item{yAxis.label}{boolean}

\item{legend.layout}{character}

\item{legend.align}{character}

\item{legend.valign}{character}

\item{legend.show}{boolean}

\item{plot.save}{boolean}

\item{plot.theme}{ggplot2 theme}
}
\value{
plotly object
}
\description{
Title
}
\examples{
data(iris)
DT <- data.frame(ID=iris$Species,X=iris$Sepal.Length,Y=iris$Sepal.Width)
buildPlot.plotly(DT)

}
